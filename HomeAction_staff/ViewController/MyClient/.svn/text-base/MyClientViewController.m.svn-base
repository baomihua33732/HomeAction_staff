//
//  MyClientViewController.m
//  HomeAction_staff
//
//  Created by 郭同明 on 16/9/13.
//  Copyright © 2016年 陈宝祥. All rights reserved.
//


#import "MyClientViewController.h"
#import "DetailViewController.h"
#import "OuterTableViewCell.h"   //外层cell
#import "InsideTableViewCell.h"  //内层cell
@interface MyClientViewController ()<UITableViewDelegate,UITableViewDataSource>
@property (strong, nonatomic) IBOutlet UIView *leftView;

@property (strong, nonatomic) IBOutlet UITableView *tableView;
@property(strong,nonatomic) NSMutableArray* dataArray;
@end

@implementation MyClientViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
_dataArray = [[NSMutableArray alloc] init];
_tableView.delegate     =self;
_tableView.dataSource   =self;
_tableView.showsVerticalScrollIndicator = NO;
//添加演示数据
[self addTestData];

}
- (void)addTestData
{
    /**
     第一层
     */
    TreeModel *node = [[TreeModel alloc]init];
    node.type = NodeTypeSectionHead;
    node.sonNodes = nil;
    node.isExpanded = NO;//关闭状态
    
    
    TreeModel *node1 = [[TreeModel alloc]init];
    node1.type = NodeTypeSectionHead;//type 1的cell
    node1.sonNodes = nil;
    node1.isExpanded = NO;//关闭状态
    
    
    TreeModel *node2 = [[TreeModel alloc]init];
    node2.type = NodeTypeSectionHead;//type 1的cell
    node2.sonNodes = nil;
    node2.isExpanded = FALSE;//关闭状态
    
    
    TreeModel *node3 = [[TreeModel alloc]init];
    node3.type = NodeTypeSectionHead;
    node3.sonNodes = nil;
    node3.isExpanded = FALSE;
    
    
    
    /**
     第二层
     */
    TreeModel *node4 = [[TreeModel alloc]init];
    node4.type = NodeTypeRow;
    node4.sonNodes = nil;
    node4.isExpanded = FALSE;
    
    
    TreeModel *node5 = [[TreeModel alloc]init];
    node5.type = NodeTypeRow;//type 2的cell
    node5.sonNodes = nil;
    node5.isExpanded = FALSE;
    
    
    TreeModel *node6 = [[TreeModel alloc]init];
    node6.type = NodeTypeRow;
    node6.sonNodes = nil;
    node6.isExpanded = FALSE;
    
    
    TreeModel *node7 = [[TreeModel alloc]init];
    node7.type = NodeTypeRow;
    node7.sonNodes = nil;
    node7.isExpanded = FALSE;
    
    
    TreeModel *node8 = [[TreeModel alloc]init];
    node8.type = NodeTypeRow;
    node8.sonNodes = nil;
    node8.isExpanded = FALSE;
    
    
    TreeModel *node9 = [[TreeModel alloc]init];
    node9.type = NodeTypeRow;
    node9.sonNodes = nil;
    node9.isExpanded = FALSE;
    
    node.sonNodes = [NSMutableArray arrayWithObjects:node4,node5,nil];
    node1.sonNodes = [NSMutableArray arrayWithObjects:node6,nil];
    node2.sonNodes = [NSMutableArray arrayWithObjects:node7,node8,node9,nil];
    node3.sonNodes = [NSMutableArray arrayWithObjects:node5,nil];
    _dataArray = [NSMutableArray arrayWithObjects:node,node1,node2,node3, nil];
}


#pragma mark - Table view data source
-(NSInteger) numberOfSectionsInTableView:(UITableView *)tableView{
    return _dataArray.count;
}

-(NSInteger) tableView:(UITableView*)tableView numberOfRowsInSection:(NSInteger)section{
    
    TreeModel *node = _dataArray[section];
    if (node.isExpanded) {
        return node.sonNodes.count + 1;
    }
    return 1;
}

-(UITableViewCell*)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    static NSString *indentifier = @"OuterTableViewCell";
    static NSString *indentifier1 = @"RowCell";
    
    TreeModel *node;
    if (indexPath.row == NodeTypeSectionHead) {
        node = _dataArray[indexPath.section];
    } else {
        TreeModel *nodeSection = _dataArray[indexPath.section];
        node = nodeSection.sonNodes[indexPath.row-1];
    }
    if(node.type == NodeTypeSectionHead) {
        OuterTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:indentifier];
        if(cell == nil){
            cell = [[[NSBundle mainBundle] loadNibNamed:@"OuterTableViewCell" owner:self options:nil] lastObject];
        }
        
        cell.selectionStyle = UITableViewCellSelectionStyleGray;
        return cell;
    } else {
        InsideTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:indentifier1];
        if(cell == nil){
            cell = [[[NSBundle mainBundle] loadNibNamed:@"InsideTableViewCell" owner:self options:nil] lastObject];
        }
        cell.node = node;
        
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        return cell;
    }
}
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.row == 0) {
        TreeModel *node = _dataArray[indexPath.section];
        BOOL isExpand = node.isExpanded;
        ///////////////////////////////////////////////////
        //控制Tree显示样式
        for (int i = 0; i<_dataArray.count; i++) {
            TreeModel *nodeI = _dataArray[i];
            
            nodeI.isExpanded = NO;
        }
        node.isExpanded = !isExpand;
        [tableView reloadData];
    }else{
        NSLog(@"%ld",(long)indexPath.row);
        _leftView.frame = CGRectMake(-160, 72, 200, 496);
    }
}

-(CGFloat)tableView:(UITableView*)tableView heightForRowAtIndexPath:(NSIndexPath*)indexPath
{
    if (indexPath.row == 0) {
        return 40;
    }
    return 40;
}

#pragma mark ---- 隐藏和展示左菜单
- (IBAction)leftBtnAction:(UIButton *)sender {
    _leftView.frame = CGRectMake(0, 72, 200, 496);
    
}
- (IBAction)goBack:(id)sender {
    [self.navigationController popViewControllerAnimated:YES];
}
- (IBAction)testBtnAction:(id)sender {
    DetailViewController *detailVC = [DetailViewController new];
    [self.navigationController pushViewController:detailVC animated:YES];
}


- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
